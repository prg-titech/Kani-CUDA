package Expression;

import static org.junit.Assert.*;

import java.util.List;

import org.junit.Test;

public class ExpressionExamples {
	Expression one = new Constant<Integer>(1);
	Expression varX = new Variable("x");
	Expression varY = new Variable("y");	
	Environment env = new Environment();
	
	// x + y + 1
	Expression exp1 = varX.plus(varY).plus(one);
	
	// x - (y - 1)
	Expression exp2 = varX.minus(varY.minus(one));

	@Test
	public void testExp() {
		env.put("x", 1);
		env.put("y", 2);
		one.print();
		varX.print();
		exp1.print();
		exp2.print();
		assertEquals(1, one.eval(env));
		assertEquals(1, varX.eval(env));
		assertEquals(4, exp1.eval(env));
		assertEquals(0, exp2.eval(env));
	}
	
	@Test
	public void testEnv() {
		env.addVar("x", 1);
		env.addVar("y", 0);
		//env.addVar("z", 0);
		//env.addVar("w", 0);
		
		// Generate arbitrary expression of depth 3
		List<Expression> lst = env.generateExp(3);
		int size = lst.size();
		for(int i = 0; i < size; i++){
			lst.get(i).print();
		}
	}

}
